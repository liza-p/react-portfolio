{"version":3,"sources":["components/Jumbotron/index.js","components/Footer/index.js","components/AboutMe/index.js","components/Portfolio/index.js","App.js","serviceWorker.js","index.js"],"names":["SocialIcons","className","href","target","Jumbotron","page","style","fontSize","width","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","clear","textAlign","backgroundColor","src","Footer","props","AboutMe","PortfolioItem","portfolio","img","alt","name","height","github","app_url","Portfolio","portfolios","map","index","key","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7cd21cac.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nfunction Jumbotron({ page }) {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" style={{fontSize: '20px'}}>\n        <div className=\"container-fluid p-0\">\n          <div className=\"row\" style={{width: '100%'}}>\n            <div className=\"col-auto\">\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                  <li className={`nav-item ${page === 'aboutMe' ? 'active' : ''}`}>\n                    <Link className=\"nav-link\" to=\"/\">About Me <span className=\"sr-only\">(current)</span></Link>\n                  </li>\n                  <li className={`nav-item ${page === 'portfolio' ? 'active' : ''}`}>\n                    <Link className=\"nav-link\" to=\"/portfolio\">Portfolio</Link>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"ml-auto py-2\">\n              <SocialIcons />\n            </div>\n          </div>\n        </div>\n      </nav>\n    <div\n      style={{ clear: \"both\", textAlign: \"center\", backgroundColor: \"#f8f9fa\"}}\n      className=\"jumbotron pt-0\"\n    >\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <div className=\"greeting pt-4 ml-auto mr-auto\">\n            <div><b>Hello!</b></div>\n            <div>I am Liza Poliachenko</div>\n            <div style={{fontSize: '20px'}}>I am a full-stack web developer</div>\n          </div>\n        </div>\n        <div className=\"col-6\"><img className=\"avatar\" src=\"img/avatar.jpg\" /></div>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nfunction SocialIcons() {\n  return (\n    <div className=\"ml-auto mr-auto mb-2\">\n      <span className=\"mr-2\"><b>Follow me:</b></span>\n      <a href=\"https://www.linkedin.com/in/liza/\" className=\"social-icon fa fa-linkedin\" target=\"_blank\"></a>\n      <a href=\"https://github.com/liza-p\" className=\"social-icon fa  fa-github\" target=\"_blank\"></a>\n      <a href=\"https://www.instagram.com/liyourlp/\" className=\"social-icon fa  fa-instagram\" target=\"_blank\"></a>\n    </div>\n  );\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\n\nfunction Footer(props) {\n  return (\n    <footer className=\"footer fixed-bottom\">\n      <div className=\"container text-center\">\n        \n      </div>\n    </footer>\n  )}\nexport default Footer;","import React from \"react\";\nimport Jumbotron from \"../Jumbotron\";\nimport Footer from \"../Footer\";\n\n\nconst AboutMe = () => {\n   \n\n    return (\n        <div className=\"container-fluid p-0\">\n            <Jumbotron page=\"aboutMe\" />\n         \n            <div className=\"container\">\n            <h3 className=\"text-center pb-3\">About Me</h3>\n                <div className=\"row\">\n                    <div className=\"col-auto\">\n                        <img src=\"img/me.jpg\" style={{width: '300px'}}/>\n                        <div style={{fontSize: '20px'}}>\n                            <p>Contact info</p>\n                            <ul>\n                                <li>Location: San Francisco, CA</li>\n                                <li>Email: liza.poliachenko@gmail.com</li>\n                                <li>Phone: (415) 716-6895</li>\n                                <li><a href=\"https://www.linkedin.com/in/liza/\" target=\"_blank\">LinkedIn</a></li>\n                                <li><a href=\"https://github.com/liza-p\" target=\"_blank\">GitHub</a></li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"col\" style={{fontSize: '20px'}}>\n                        <p> \"I am a Full Stack Engineer aiming to \n            build user friendly and intuitive experiences on the web.\n            When designing a front-end project I strive for a good user experience considering the diversity of users who will use it.\n            When approaching the backend, I focus on creating hight quality products that translate to responsive front-end environments\"</p>\n                        <p>\n                            <div>Front-end: JavaScript | React | HTML | CSS | Git</div>\n                            <div>Back-end: NodeJs | Express | MongoDB | MySQL</div>\n                        </p>\n                    </div>\n                </div>\n            </div>\n\n            <Footer/>\n           \n        </div>\n    );\n};\n\nexport default AboutMe;","import React from \"react\";\nimport Jumbotron from \"../Jumbotron\";\nimport Footer from \"../Footer\";\nimport portfolios from '../../portfolios.json'\n\nconst PortfolioItem = ({ portfolio }) => {\n    return (\n        <div className=\"col-12 col-sm-4\">\n            <div className=\"card mb-4\" >\n                <div className=\"text-center\">\n                    <img\n                        src={portfolio.img}\n                        className=\"card-img-top p-2\"\n                        alt={portfolio.name}\n                        style={{width: \"150px\", height: \"150px;\"}}\n                    />\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"text-center\">\n                    <h5 className=\"card-title\">{portfolio.name}</h5>\n                    <a href={portfolio.github} className=\"card-link\" target=\"_blank\">Github</a>\n                    {\n                        portfolio.app_url ? (<a href={portfolio.app_url} className=\"card-link\" target=\"_blank\">Live site</a>) : null\n                    }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst Portfolio = () => {\n    return (\n        <div className=\"container-fluid p-0\">\n            <Jumbotron page=\"portfolio\" />\n            <div className=\"container\">\n                <div className=\"row\">\n                    {portfolios.map((portfolio, index) => (\n                        <PortfolioItem key={index} portfolio={portfolio} />\n                    ))}\n                </div>\n            </div>        \n            <Footer/>           \n        </div>\n    );\n};\n\nexport default Portfolio;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport './App.css';\nimport AboutMe from './components/AboutMe';\nimport Portfolio from './components/Portfolio';\n\nfunction App() {\n  return (\n    <Router basename=\"/react-portfolio\">\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={AboutMe} />\n          <Route exact path=\"/portfolio\" component={Portfolio} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}